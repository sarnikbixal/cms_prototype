{"version":3,"sources":["actions/actionTypes.js","reducers/ordersReducer.js","reducers/notificationsReducer.js","reducers/index.js","actions/orderActions.js","components/Products.js","components/CheckOut.js","components/OrderConfirm.js","actions/notificationActions.js","components/TrackOrder.js","components/Schedule.js","components/Routes.js","components/HeaderBar.js","components/Notification.js","components/Notifications.js","App.js","serviceWorker.js","store/configureStore.js","index.js"],"names":["SET_ORDER_SUCCESS","SET_ORDER_FAILURE","UPDATE_ORDER_STATUS_SUCCESS","DELETE_NOTIFICATION_SUCCESS","NEW_NOTIFICATION_SUCCESS","initialState","model","rootReducer","combineReducers","order","state","arguments","length","undefined","action","type","types","Object","objectSpread","steps","notifications","defineProperty","notification","notificationId","clone","_","id","baseUri","setOrderSuccess","setOrderFailure","placeOrder","_order","url","concat","options","params","dispatch","Promise","resolve","reject","axios","then","res","_data","data","error","catch","e","message","getOrder","_orderId","orderId","updateOrderStatus","updateOrderStatusSuccess","downloadICS","console","log","createICS","_date","date","Products","props","products","product","react_default","a","createElement","className","key","title","desc","Order","components_Products","SubmitOrderButton","onClick","submitOrderFn","CheckOut","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","orderActions","setState","isPlaced","history","push","err","placedDate","lastUpdateDate","user","username","firstName","lastName","email","status","timestamp","isPending","isFilled","CheckOut_Order","CheckOut_SubmitOrderButton","Component","connect","ownProps","bindActionCreators","OrderConfirm","componentDidMount","match","href","deleteNotificationSuccess","deleteNotification","newNotificationSuccess","mockTicketNotification","stepId","step","notificationType","displayMessage","Date","getTime","tsFormat","moment","format","trim","Steps","index","isLast","TrackOrder_Step","submitTicketFn","Spacer","Step","isBlocked","ticket","isResolved","TrackOrder_Spacer","TrackOrder","fillStepsTimer","componentDidUpdate","prevProps","setAllFilled","startStepId","unFilledStep","interval","setInterval","_steps","prevStep","clearInterval","submitTicket","notificationActions","setTimeout","isReadyForPickup","TrackOrder_Steps","Schedule","handleDateChange","selectedDate","handleConfirm","isReadyForDownload","classes","makeStyles","grid","width","window","location","_this2","material_ui_pickers_esm","utils","DateFnsUtils","Grid","container","justify","margin","label","value","onChange","KeyboardButtonProps","aria-label","Button","variant","color","handleDownloadICS","Routes","Switch","Route","exact","path","render","components_CheckOut","components_OrderConfirm","components_TrackOrder","components_Schedule","HeaderBar","withRouter","Notification","typeClass","toLowerCase","isAnimate","isFixed","closeFn","time","Notifications","handleCloseClick","notificationsContainer","ordered","note","components_Notification","side","App","components_HeaderBar","components_Routes","components_Notifications","Boolean","hostname","store","createStore","applyMiddleware","thunk","reduxImmutableStateInvariant","ReactDOM","react_redux_es","BrowserRouter","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.92e155a6.chunk.js","sourcesContent":["//Orders\nexport const SET_ORDER_SUCCESS = 'SET_ORDER_SUCCESS';\nexport const SET_ORDER_FAILURE = 'SET_ORDER_FAILURE';\n\nexport const SET_ORDER_STATUS_SUCCESS = 'SET_ORDER_STATUS_SUCCESS';\nexport const SET_ORDER_STATUS_FAILURE = 'SET_ORDER_STATUS_FAILURE';\n\nexport const UPDATE_ORDER_STATUS_SUCCESS = 'UPDATE_ORDER_STATUS_SUCCESS';\nexport const UPDATE_ORDER_STATUS_FAILURE = 'UPDATE_ORDER_STATUS_FAILURE';\n\n\n//WebSocket\nexport const CONNECT_SOCKET_SUCCESS = 'CONNECT_SOCKET_SUCCESS';\nexport const CONNECT_SOCKET_FAILURE = 'CONNECT_SOCKET_FAILURE';\n\nexport const CONNECT_TOPIC_SUCCESS = 'CONNECT_TOPIC_SUCCESS';\nexport const CONNECT_TOPIC_FAILURE = 'CONNECT_TOPIC_FAILURE';\n\nexport const SOCKET_SUBSCRIBE_SUCCESS = 'SOCKET_SUBSCRIBE_SUCCESS';\nexport const SOCKET_SUBSCRIBE_FAILURE = 'SOCKET_SUBSCRIBE_FAILURE';\n\n//NOTIFICATIONS\nexport const DELETE_NOTIFICATION_SUCCESS = 'DELETE_NOTIFICATION_SUCCESS';\nexport const NEW_NOTIFICATION_SUCCESS = 'NEW_NOTIFICATION_SUCCESS';","import * as types from '../actions/actionTypes';\nimport * as _ from 'lodash';\n\nconst initialState =  {};\n\nexport default function ordersReducer(state = initialState, action){\n    switch(action.type){\n        case types.SET_ORDER_SUCCESS:\n            return action.order;\n        case types.UPDATE_ORDER_STATUS_SUCCESS:\n            return {\n                ...state, steps: action.steps\n            }\n        default:\n            return state;\n    }\n}","import * as types from '../actions/actionTypes';\nimport * as _ from 'lodash';\n\nconst initialState =  {\n    model: {}\n}\n\nexport default function notificationsReducer(state = initialState, action){\n    switch(action.type){\n        case 'TEST_NOTIFICATION':\n            return {\n                ...state, model: {\n                    ...state.model, \n                        [action.notification.notificationId]: action.notification\n                }\n            };\n\n        case types.NEW_NOTIFICATION_SUCCESS:\n            return{\n                ...state, model: {\n                    ...state.model, \n                        [action.notification.notificationId]: action.notification\n                }\n            }\n        \n        case types.DELETE_NOTIFICATION_SUCCESS:\n            let clone = _.cloneDeep(state.model);\n            delete clone[action.id];\n            clone = action.id === -1 ? {} : clone;\n            return {\n                ...state, \n                model: clone\n            };\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport order from './ordersReducer';\nimport notifications from './notificationsReducer';\n\nconst rootReducer = combineReducers({\n    order,\n    notifications\n});\n\nexport default rootReducer;","import * as types from './actionTypes';\nimport * as _ from 'lodash';\nimport * as axios from 'axios';\n\nconst baseUri = 'http://localhost:3001';\n\nexport function setOrderSuccess(order){\n    return {type: types.SET_ORDER_SUCCESS, order};\n}\n\nexport function setOrderFailure(order){\n    return {type: types.SET_ORDER_FAILURE, order};\n}\n\nexport function placeOrder(_order){\n    let url = `${baseUri}/api/placeOrder`;\n    let options = {\n        params:{\n            order: _order\n        }\n    };\n    \n    return function(dispatch){\n        return new Promise((resolve, reject)=>{\n            axios.post(url, options)\n            .then(res => {\n                let _data = res.data;\n                if(_data.error){\n                    dispatch(setOrderFailure(_data.error));\n                    reject(_data.error);\n                }else{\n                    dispatch(setOrderSuccess(_data));\n                    resolve(_data);\n                }\n            }).catch(e => {\n                dispatch(setOrderSuccess(e.message));\n                reject(e.message);\n            });\n        });\n    }\n}\n\nexport function getOrder(_orderId){\n    let url = `${baseUri}/api/getOrder`;\n    let options = {\n        params:{\n            orderId: `order_${_orderId}`\n        }\n    };\n    \n    return function(dispatch){\n        return new Promise((resolve, reject)=>{\n            axios.post(url, options)\n            .then(res => {\n                let _data = res.data;\n                if(_data.error){\n                    dispatch(setOrderFailure(_data.error));\n                    reject(_data.error);\n                }else{\n                    dispatch(setOrderSuccess(_data));\n                    resolve(_data);\n                }\n            }).catch(e => {\n                dispatch(setOrderFailure(e.message));\n                reject(e.message);\n            });\n        });\n    }\n}\n\nexport function updateOrderStatus(steps){\n    return function(dispatch){      \n        dispatch(updateOrderStatusSuccess(steps));\n    }\n}\n\nexport function updateOrderStatusSuccess(steps){\n    return {type: types.UPDATE_ORDER_STATUS_SUCCESS, steps};\n}\n\nexport function downloadICS(_order){\n    let url = `${baseUri}/api/downloadICS`;\n    let options = {};\n    return function(dispatch){\n        axios.get(url, options)\n        .then(res => {\n            let _data = res.data;\n            console.log(_data)\n        }).catch(e => {\n            console.log(e)\n        });\n    }\n}\n\nexport function createICS(_order, _date){\n    let url = `${baseUri}/api/createICS`;\n    let options = {\n        params:{\n            order: _order,\n            date: _date\n        }\n    };\n    return function(dispatch){\n        return new Promise((resolve, reject)=>{\n            axios.post(url, options)\n            .then(res => {\n                let _data = res.data;\n                console.log(_data)\n                if(_data.error){\n                    reject(_data.error);\n                }else{\n                    resolve(_data);\n                }\n            }).catch(e => {\n                reject(e.message);\n            });\n        })\n    }\n}","import React from 'react';\nimport * as _ from 'lodash';\n\nconst Products = (props) =>{\n    return _.map(props.products, (product)=>{\n        return (\n            <div className=\"product\" key={product.id}>\n                <span>{product.title}</span>\n                <span>{product.desc}</span>\n            </div>\n        )\n    });\n}\n\nexport default Products;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as orderActions from '../actions/orderActions';\nimport * as _ from 'lodash';\nimport Products from './Products';\n\nconst Order = (props) =>{\n    return (\n        <div className=\"order\">\n            <Products products={props.order.products} />\n        </div>\n    )\n}\n\n// const Products = (props) =>{\n//     return _.map(props.products, (product)=>{\n//         return (\n//             <div className=\"product\" key={product.id}>\n//                 <span>{product.title}</span>\n//                 <span>{product.desc}</span>\n//             </div>\n//         )\n//     });\n// }\n\nconst SubmitOrderButton = (props) =>{\n    return (\n        <div className=\"button\" onClick={()=>{props.submitOrderFn()}}>\n            PLACE ORDER\n        </div>\n    )\n}\n\nclass CheckOut extends Component {\n    constructor(props){\n        super();\n        this.state = {\n            isPlaced: false,\n            order: {\n                \"id\": 1,\n                \"placedDate\": null,\n                \"lastUpdateDate\": null,\n                \"user\":{\n                    \"username\": \"test_user1\",\n                    \"firstName\": \"test\",\n                    \"lastName\": \"user\",\n                    \"email\": \"test_user@email.com\"\n                },\n                \"products\":[\n                    {\n                        \"id\": 1,\n                        \"title\": \"AOC 22\\\" MONITOR\",\n                        \"desc\": \"AOC 22\\\" MONITOR, AOC 22\\\" MONITOR, AOC 22\\\" MONITOR, AOC 22\\\" MONITOR, AOC 22\\\" MONITOR, AOC 22\\\" MONITOR\"\n                    },\n                    {\n                        \"id\": 2,\n                        \"title\": \"MacBook Keyboard\",\n                        \"desc\": \"MacBook Keyboard, MacBook Keyboard, MacBook Keyboard, MacBook Keyboard, MacBook Keyboard, MacBook Keyboard\"\n                    }\n                ],\n                \"steps\":[\n                    {\n                        \"id\": 1,\n                        \"status\": \"Ordered\",\n                        \"timestamp\": null,\n                        \"isPending\": true,\n                        \"isFilled\": false\n                    },\n                    {\n                        \"id\": 2,\n                        \"status\": \"Reviewed\",\n                        \"timestamp\": null,\n                        \"isPending\": true,\n                        \"isFilled\": false\n                    },\n                    {\n                        \"id\": 3,\n                        \"status\": \"Signed-Off\",\n                        \"timestamp\": null,\n                        \"isPending\": true,\n                        \"isFilled\": false\n                    },\n                    {\n                        \"id\": 4,\n                        \"status\": \"Ready For Pickup\",\n                        \"timestamp\": null,\n                        \"isPending\": true,\n                        \"isFilled\": false\n                    },\n                    {\n                        \"id\": 5,\n                        \"status\": \"Delivered\",\n                        \"timestamp\": null,\n                        \"isPending\": true,\n                        \"isFilled\": false\n                    }\n                ]\n            }\n        }\n    }\n\n    placeOrder = () =>{\n        this.props.orderActions.placeOrder(this.state.order).then(res =>{\n            this.setState({\n                order: res,\n                isPlaced: true\n            });\n            this.props.history.push(`/order-confirmation/${res.id}`);\n        }).catch(err=>{\n            console.log(err)\n        })\n    }\n\n    render() {\n        return(\n            <div className=\"order-container\">\n                <Order order={this.state.order}></Order>\n                <SubmitOrderButton submitOrderFn={this.placeOrder}></SubmitOrderButton>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state, ownProps){\n    return {\n        order: state.order\n    };\n  }\n \n  function mapDispatchToProps(dispatch){\n   return {\n     orderActions: bindActionCreators(orderActions, dispatch)\n   };\n }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckOut);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as orderActions from '../actions/orderActions';\nimport * as _ from 'lodash';\nimport Products from './Products';\n\nclass OrderConfirm extends Component {\n    constructor(props){\n        super();\n        this.orderId = props.match.params.id;\n        this.state = {\n            \n        }\n    }\n\n    componentDidMount = () =>{\n        this.props.orderActions.getOrder(this.orderId).then(res =>{\n            console.log(res);\n            this.setState({\n                order: res\n            });\n        }).catch(err=>{\n            console.log(err)\n        })\n    }\n\n    render() {\n        return(\n            <div className=\"order-confirm-container\">\n                <div>Confirm Order</div>\n                <div>Your Order Has Been Placed: </div>\n                <Products products={this.props.order.products}></Products>\n                <a href={`/order-status/${this.props.order.id}`}>track order</a>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state, ownProps){\n    return {\n        order: state.order\n    };\n  }\n \n  function mapDispatchToProps(dispatch){\n   return {\n     orderActions: bindActionCreators(orderActions, dispatch)\n   };\n }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderConfirm);\n","import * as types from './actionTypes';\nimport * as _ from 'lodash';\n\nexport function deleteNotificationSuccess(id){\n    return {type: types.DELETE_NOTIFICATION_SUCCESS, id};\n}\n\nexport function deleteNotification(notificationId){\n    return function(dispatch){\n        dispatch(deleteNotificationSuccess(notificationId));\n    }\n}\n\nexport function newNotificationSuccess(notification){\n    return {type: 'NEW_NOTIFICATION_SUCCESS', notification};\n}\n\nexport function mockTicketNotification(order, stepId){\n    return function(dispatch){\n        let step = _.find(order.steps, {'id': stepId}),\n        note = {\n            notificationType: 'ticket',\n            displayMessage: `Ticket Submitted: Order #:${order.id} | Blocked-Action: ${step.status}`,\n            timestamp: new Date(),\n            notificationId: new Date().getTime()\n        };\n        dispatch(newNotificationSuccess(note));\n    }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as orderActions from '../actions/orderActions';\nimport * as notificationActions from '../actions/notificationActions';\nimport * as _ from 'lodash';\nimport * as moment from 'moment';\nconst tsFormat = (date) => moment(date).format('M/DD/YY hh:mm A').trim();\n\nconst Steps = (props) =>{\n    let index = 0;\n    return _.map(props.steps, (step)=>{\n        index++;\n        let isLast = index === props.steps.length;\n        return (\n            <Step step={step} isLast={isLast} key={step.id} submitTicketFn={props.submitTicketFn}></Step>\n        )\n    });\n}\n\nconst Spacer = (props) =>{\n    return (\n        <div className=\"flex-container\">\n            <div className={`flex-item spacer ${props.type}`}></div>\n        </div>\n    )\n}\n\nconst Step = (props) =>{\n    let isBlocked = (props.step.timestamp && !props.step.isFilled) || (!props.step.isFilled && !props.step.isPending),\n    type = props.step.isFilled ? 'full' : 'half';\n    return (\n        <div>\n            <div className={`step flex-container ${props.step.isFilled ? 'filled' : ''} ${isBlocked ? 'blocked' : ''}`}>\n                <div className={`flex-item`}>\n                    <div className=\"step-box\"></div>\n                </div>\n                <div className=\"flex-item\">-</div>\n                <div className=\"flex-item step-info\">\n                    <span className=\"step-status\">{props.step.status}</span>\n                    {props.step.timestamp ? <span className=\"step-date\"> - {tsFormat(props.step.timestamp)}</span> : null}\n                </div>\n            </div>\n            {isBlocked ? \n                <div className=\"flex-container\">\n                    <div className=\"flex-item\">This step is taking longer than average to proceed. </div>\n                    <div className=\"flex-item\">\n                        {props.step.ticket && !props.step.ticket.isResolved ?\n                            <span>Ticket Submitted: {tsFormat(props.step.ticket.timestamp)}</span>\n                        :\n                            <div className=\"link-button\" onClick={()=>props.submitTicketFn(props.step.id)}>Submit Ticket</div>\n                        }\n                    </div>\n                </div>\n            : null}\n            {!props.isLast ? <Spacer type={type}></Spacer> : null}\n        </div>\n    )\n}\n\nclass TrackOrder extends Component {\n    constructor(props){\n        super();\n        this.orderId = props.match.params.id;\n        this.state = {}\n    }\n\n    componentDidMount = () =>{\n        if(_.isEmpty(this.props.order)){\n            this.props.orderActions.getOrder(this.orderId).then(res =>{\n                this.fillStepsTimer(2, 4);\n            }).catch(err=>{\n                console.log(err)\n            })\n        }\n    }\n\n    componentDidUpdate = (prevProps) =>{\n        if(prevProps.order.steps !== this.props.order.steps){\n           if(_.findIndex(this.props.order.steps, {isFilled: false}) === -1){\n               this.setAllFilled();\n           }\n        }\n    }\n\n    setAllFilled(){\n        this.setState({\n            isReadyForPickup: true\n        })\n    }\n\n    fillStepsTimer = (startStepId, unFilledStep) =>{\n        let stepId = startStepId,\n        interval = setInterval(()=>{\n            let _steps = _.cloneDeep(this.props.order.steps),\n            step = _.find(_steps, {'id': stepId}),\n            prevStep = _.find(_steps, {'id': stepId-1});\n\n            if(stepId <= _steps.length && prevStep.isFilled){\n                step.isPending = false;\n                step.isFilled = unFilledStep && unFilledStep === stepId ? false : true;\n                step.timestamp = new Date().getTime();\n                this.props.orderActions.updateOrderStatus(_steps);\n                stepId++;\n            }else{\n                clearInterval(interval);\n            }\n        }, 500) \n    }\n\n    submitTicket = (stepId) =>{\n        let _steps = _.cloneDeep(this.props.order.steps),\n        step = _.find(_steps, {'id': stepId});\n        step.ticket = {\n            timestamp: new Date().getTime(),\n            isResolved: false\n        }\n        this.props.orderActions.updateOrderStatus(_steps);\n        this.props.notificationActions.mockTicketNotification(this.props.order, stepId);\n\n        setTimeout(()=>{\n            let _steps = _.cloneDeep(this.props.order.steps),\n            step = _.find(_steps, {'id': stepId});\n\n            step.ticket.isResolved = true;\n            step.isFilled = true;\n            this.props.orderActions.updateOrderStatus(_steps);\n            this.fillStepsTimer(stepId + 1, null);\n        }, 1000);\n    }\n\n    render() {\n        return(\n            <div className=\"status-container\">\n                <div className=\"steps-container\">\n                    <Steps steps={this.props.order.steps} submitTicketFn={this.submitTicket}></Steps>\n                    {this.state.isReadyForPickup ? \n                        <div className=\"button-container\">\n                            <a href={`/schedule-pickup/${this.props.order.id}`}>schedule pick-up</a>\n                        </div>\n                    : null}\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state, ownProps){\n    return {\n        order: state.order,\n        notifications: state.notifications\n    };\n  }\n \n  function mapDispatchToProps(dispatch){\n   return {\n     orderActions: bindActionCreators(orderActions, dispatch),\n     notificationActions: bindActionCreators(notificationActions, dispatch),\n   };\n }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TrackOrder);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as orderActions from '../actions/orderActions';\nimport * as notificationActions from '../actions/notificationActions';\nimport * as _ from 'lodash';\nimport * as moment from 'moment';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport Button from '@material-ui/core/Button';\n\nconst tsFormat = (date) => moment(date).format('M/DD/YY hh:mm A').trim();\nclass Schedule extends Component {\n    constructor(props){\n        super();\n        this.orderId = props.match.params.id;\n        this.state = {\n            selectedDate: new Date()\n        }\n        this.classes = makeStyles({\n            grid: {\n              width: '60%',\n            },\n          });\n    }\n\n\n    componentDidMount = () =>{\n        if(_.isEmpty(this.props.order)){\n            this.props.orderActions.getOrder(this.orderId).then(res =>{\n\n            }).catch(err=>{\n\n            })\n        }\n    }\n\n    handleDateChange = (date) =>{\n        this.state = ({\n            selectedDate: date\n        })\n    }\n\n    handleConfirm = () =>{\n        this.props.orderActions.createICS(this.props.order, this.state.selectedDate).then(res => {\n            this.setState({\n                isReadyForDownload: true\n            })\n        }).catch(err => {\n\n        })\n    }\n\n    handleDownloadICS(){\n        window.location.href = `http://localhost:3001/api/downloadICS`;\n    }\n\n    render() {\n        return(\n            <div className=\"schedule-container\">\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <Grid container className={this.classes} justify=\"space-around\">\n                        <KeyboardDatePicker\n                            margin=\"normal\"\n                            id=\"mui-pickers-date\"\n                            label=\"Select Date\"\n                            value={this.state.selectedDate}\n                            onChange={this.handleDateChange}\n                            KeyboardButtonProps={{\n                            'aria-label': 'select date',\n                            }}\n                        />\n                        <KeyboardTimePicker\n                            margin=\"normal\"\n                            id=\"mui-pickers-time\"\n                            label=\"Select Time\"\n                            value={this.state.selectedDate}\n                            onChange={this.handleDateChange}\n                            KeyboardButtonProps={{\n                            'aria-label': 'select time',\n                            }}\n                        />\n                    </Grid>\n                </MuiPickersUtilsProvider>\n\n                {!this.state.isReadyForDownload ?\n                    <div className=\"confirm-pickup\">\n                        <span> Confirm pickup at {tsFormat(this.state.selectedDate)}.</span>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>{this.handleConfirm()}}>Confrim Pickup</Button>\n                    </div>\n                :\n                    <div className=\"download-ico\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>{this.handleDownloadICS()}}>Download ICS</Button>\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state, ownProps){\n    return {\n        order: state.order,\n        notifications: state.notifications\n    };\n  }\n \n  function mapDispatchToProps(dispatch){\n   return {\n     orderActions: bindActionCreators(orderActions, dispatch),\n     notificationActions: bindActionCreators(notificationActions, dispatch),\n   };\n }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Schedule);\n","import React from 'react';\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport CheckOut from './CheckOut';\nimport OrderConfirm from './OrderConfirm';\nimport TrackOrder from './TrackOrder';\nimport Schedule from './Schedule';\n// import PickupConfirm from './PickupConfirm';\n\nconst Routes = (props) => {\n    return (\n        <div className='main-content'>\n            <Switch>\n                <Route exact path=\"/\" render={(props) => <CheckOut {...props}/>} >\n                    <Route exact path=\"/checkout\" render={(props) => <CheckOut {...props}/>} />\n                </Route>\n                <Route exact path=\"/order-confirmation/:id\" render={(props) => <OrderConfirm {...props}/>} />\n                <Route exact path=\"/order-status/:id\" render={(props) => <TrackOrder {...props}/>} />\n                <Route exact path=\"/schedule-pickup/:id\" render={(props) => <Schedule {...props}/>} />\n            </Switch>\n        </div>\n    )\n};\n\nexport default Routes;","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport * as _ from 'lodash';\n\nclass HeaderBar extends Component {\n    constructor(props){\n      super(props);\n\n    }\n\n    render() {\n      return(\n        <div className=\"header-bar\">\n            <a href=\"/\">Cart</a>\n        </div>\n      )\n    }\n }\n \n export default withRouter(HeaderBar);\n ","import React from 'react';\nimport moment from 'moment';\nconst tsFormat = (date) => moment(date).format('M/DD/YY hh:mm A').trim();\n\nconst Notification = (props) => {\n    let typeClass = props.type ? props.type.toLowerCase() : '';\n    return (\n        <div className={`notification-container ${typeClass} ${props.isAnimate ? 'slide' : ''} ${props.isFixed ? 'fixed' : ''}`}>\n           <div className=\"notification-bg\"></div>\n           <div className=\"close-button\" onClick={()=>{props.closeFn(props.id)}}>&#10006;</div>\n           <div className={`notification-content`}>\n                <div className=\"flex-container column\">\n                    <div className=\"flex-item timestamp\">{tsFormat(props.time)}</div>\n                    <div className={`flex-item message`}>{props.message}</div>\n               </div>\n           </div>\n        </div>\n    )\n};\n\nexport default Notification;","import React, { Component } from 'react';\nimport * as notificationActions from '../actions/notificationActions';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport Notification from './Notification';\nimport * as _ from 'lodash';\n\nclass Notifications extends Component {\n    constructor(props){\n        super();\n    }\n\n    handleCloseClick = (notificationId) =>{\n        this.props.notificationActions.deleteNotification(notificationId);\n    }\n\n    notificationsContainer = () =>{\n        let ordered = _.orderBy(this.props.notifications.model, ['timestamp'],['desc']);\n        return _.map(ordered, note =>{\n            return(\n                <div className=\"flex-item\" key={`note_${note.notificationId}`}>\n                    <Notification isAnimate={true} type={note.side} message={`SIDE: ${note.side}`} time={note.timestamp} id={note.notificationId} closeFn={this.handleCloseClick} isFixed={false}/>\n                </div>\n            )\n        });\n    }\n\n    render() {\n        return this.props.notifications.model ? (\n            <div className=\"trade-notifications-container flex-container column\">\n                {!_.isEmpty(this.props.notifications.model) ? \n                    <div className=\"flex-item link-button\" onClick={()=>{this.handleCloseClick(-1)}}>\n                        clear all notifications\n                    </div> \n                : null}\n                {this.notificationsContainer()}\n            </div>\n        ) : null;\n    }\n }\n\nfunction mapStateToProps(state, ownProps){\n    return {\n        notifications: state.notifications,\n    };\n}\n\nfunction mapDispatchToProps(dispatch){\n    return {\n        notificationActions: bindActionCreators(notificationActions, dispatch)\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Notifications);\n","import React, { Component } from 'react';\nimport Routes from './components/Routes';\nimport HeaderBar from './components/HeaderBar';\nimport Notifications from './components/Notifications';\n\nclass App extends Component {\n  constructor(props){\n    super();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n          <HeaderBar/>\n          <Routes />\n          <Notifications />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport rootReducer from '../reducers';\nimport reduxImmutableStateInvariant from 'redux-immutable-state-invariant';\nimport thunk from 'redux-thunk';\n\nexport default function configureStore(initialState){\n    return createStore(\n        rootReducer,\n        initialState,\n        applyMiddleware(thunk, reduxImmutableStateInvariant())\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport configureStore from './store/configureStore';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport './css/main.css';\n\nconst store = configureStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App/>\n        </Router>\n    </Provider>\n, \ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}