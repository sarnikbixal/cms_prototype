{"version":3,"sources":["actions/actionTypes.js","reducers/ordersReducer.js","reducers/notificationsReducer.js","reducers/pageReducer.js","reducers/index.js","actions/orderActions.js","actions/pageActions.js","components/Products.js","components/CheckOut.js","components/OrderConfirm.js","components/TrackOrder.js","actions/notificationActions.js","components/Schedule.js","components/Routes.js","components/HeaderBar.js","components/Notification.js","components/Notifications.js","App.js","serviceWorker.js","store/configureStore.js","index.js"],"names":["SET_ORDER_SUCCESS","SET_ORDER_FAILURE","UPDATE_ORDER_STATUS_SUCCESS","DELETE_NOTIFICATION_SUCCESS","NEW_NOTIFICATION_SUCCESS","SET_PAGE_INFO_SUCCESS","initialState","model","title","status","rootReducer","combineReducers","order","state","arguments","length","undefined","action","type","types","Object","objectSpread","steps","notifications","defineProperty","notification","notificationId","clone","_","id","page","data","baseUri","setOrderSuccess","setOrderFailure","placeOrder","_order","url","concat","options","params","dispatch","Promise","resolve","reject","axios","then","res","_data","error","catch","e","message","getOrder","_orderId","orderId","updateOrderStatus","updateOrderStatusSuccess","downloadICS","console","log","createICS","_date","date","setPageInfoSuccess","setPageInfo","info","Products","props","products","product","react_default","a","createElement","className","key","src","alt","href","desc","qty","price","Order","subTotal","parseFloat","total","components_Products","data-toggle","role","aria-expanded","aria-controls","toFixed","SubmitOrderButton","onClick","submitOrderFn","CheckOut","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","orderActions","setState","isPlaced","window","location","err","pageActions","placedDate","lastUpdateDate","user","username","firstName","lastName","email","authority","timestamp","isPending","isFilled","CheckOut_Order","CheckOut_SubmitOrderButton","Component","connect","ownProps","bindActionCreators","OrderConfirm","componentDidMount","handleButtonClick","match","_this2","Steps","index","step","isLast","TrackOrder_Step","submitTicketFn","Spacer","Step","isBlocked","icon","aria-hidden","moment","Date","b","timeAgo","d","diff","h","m","s","ticket","isResolved","TrackOrder_Spacer","ProductPreview","TrackOrder","fillStepsTimer","componentDidUpdate","prevProps","setAllFilled","startStepId","unFilledStep","stepId","interval","setInterval","_steps","prevStep","getTime","clearInterval","submitTicket","setTimeout","handlePickupClick","isReadyForPickup","TrackOrder_ProductPreview","TrackOrder_Steps","deleteNotificationSuccess","deleteNotification","newNotificationSuccess","mockTicketNotification","notificationType","displayMessage","DatePicker","material_ui_pickers_esm","utils","Grid","container","classes","justify","margin","label","value","selectedDate","onChange","handleDateChange","KeyboardButtonProps","aria-label","Radios","times","time","_key","autoComplete","name","format","trim","add","tsTimeFormat","Schedule","handleConfirm","isReadyForDownload","handleDownloadICS","open","handleChooseDate","isShowDatePicker","makeStyles","grid","width","Schedule_Radios","Schedule_DatePicker","DateFnsUtils","notificationActions","Routes","Switch","Route","exact","path","render","components_CheckOut","assign","pageTitle","components_OrderConfirm","components_TrackOrder","components_Schedule","HeaderBar","withRouter","Notification","closeFn","Notifications","handleCloseClick","notificationsContainer","ordered","note","components_Notification","isAnimate","side","isFixed","App","components_HeaderBar","components_Routes","components_Notifications","Boolean","hostname","store","createStore","applyMiddleware","thunk","reduxImmutableStateInvariant","ReactDOM","react_redux_es","BrowserRouter","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.286fa874.chunk.js","sourcesContent":["//Orders\nexport const SET_ORDER_SUCCESS = 'SET_ORDER_SUCCESS';\nexport const SET_ORDER_FAILURE = 'SET_ORDER_FAILURE';\n\nexport const SET_ORDER_STATUS_SUCCESS = 'SET_ORDER_STATUS_SUCCESS';\nexport const SET_ORDER_STATUS_FAILURE = 'SET_ORDER_STATUS_FAILURE';\n\nexport const UPDATE_ORDER_STATUS_SUCCESS = 'UPDATE_ORDER_STATUS_SUCCESS';\nexport const UPDATE_ORDER_STATUS_FAILURE = 'UPDATE_ORDER_STATUS_FAILURE';\n\n//NOTIFICATIONS\nexport const DELETE_NOTIFICATION_SUCCESS = 'DELETE_NOTIFICATION_SUCCESS';\nexport const NEW_NOTIFICATION_SUCCESS = 'NEW_NOTIFICATION_SUCCESS';\n\n//PAGES\nexport const SET_PAGE_INFO_SUCCESS = 'SET_PAGE_INFO_SUCCESS';","import * as types from '../actions/actionTypes';\nimport * as _ from 'lodash';\n\nconst initialState =  {};\n\nexport default function ordersReducer(state = initialState, action){\n    switch(action.type){\n        case types.SET_ORDER_SUCCESS:\n            return action.order;\n        case types.UPDATE_ORDER_STATUS_SUCCESS:\n            return {\n                ...state, steps: action.steps\n            }\n        default:\n            return state;\n    }\n}","import * as types from '../actions/actionTypes';\nimport * as _ from 'lodash';\n\nconst initialState =  {\n    model: {}\n}\n\nexport default function notificationsReducer(state = initialState, action){\n    switch(action.type){\n        case 'TEST_NOTIFICATION':\n            return {\n                ...state, model: {\n                    ...state.model, \n                        [action.notification.notificationId]: action.notification\n                }\n            };\n\n        case types.NEW_NOTIFICATION_SUCCESS:\n            return{\n                ...state, model: {\n                    ...state.model, \n                        [action.notification.notificationId]: action.notification\n                }\n            }\n        \n        case types.DELETE_NOTIFICATION_SUCCESS:\n            let clone = _.cloneDeep(state.model);\n            delete clone[action.id];\n            clone = action.id === -1 ? {} : clone;\n            return {\n                ...state, \n                model: clone\n            };\n        default:\n            return state;\n    }\n}","import * as types from '../actions/actionTypes';\n\nconst initialState =  {\n    title: '',\n    status: ''\n};\n\nexport default function pageReducer(state = initialState, action){\n    switch(action.type){\n        case types.SET_PAGE_INFO_SUCCESS:\n            return action.data;\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport order from './ordersReducer';\nimport notifications from './notificationsReducer';\nimport page from './pageReducer';\n\nconst rootReducer = combineReducers({\n    order,\n    notifications,\n    page\n});\n\nexport default rootReducer;","import * as types from './actionTypes';\nimport * as _ from 'lodash';\nimport * as axios from 'axios';\n\nconst baseUri = process.env.NODE_ENV === 'production' ? 'https://bixal-cms-prototype.herokuapp.com' : 'http://localhost:3001';\n\nexport function setOrderSuccess(order){\n    return {type: types.SET_ORDER_SUCCESS, order};\n}\n\nexport function setOrderFailure(order){\n    return {type: types.SET_ORDER_FAILURE, order};\n}\n\nexport function placeOrder(_order){\n    let url = `${baseUri}/api/placeOrder`;\n    let options = {\n        params:{\n            order: _order\n        }\n    };\n    \n    return function(dispatch){\n        return new Promise((resolve, reject)=>{\n            axios.post(url, options)\n            .then(res => {\n                let _data = res.data;\n                if(_data.error){\n                    dispatch(setOrderFailure(_data.error));\n                    reject(_data.error);\n                }else{\n                    dispatch(setOrderSuccess(_data));\n                    resolve(_data);\n                }\n            }).catch(e => {\n                dispatch(setOrderSuccess(e.message));\n                reject(e.message);\n            });\n        });\n    }\n}\n\nexport function getOrder(_orderId){\n    let url = `${baseUri}/api/getOrder`;\n    let options = {\n        params:{\n            orderId: `order_${_orderId}`\n        }\n    };\n    \n    return function(dispatch){\n        return new Promise((resolve, reject)=>{\n            axios.post(url, options)\n            .then(res => {\n                let _data = res.data;\n                if(_data.error){\n                    dispatch(setOrderFailure(_data.error));\n                    reject(_data.error);\n                }else{\n                    dispatch(setOrderSuccess(_data));\n                    resolve(_data);\n                }\n            }).catch(e => {\n                dispatch(setOrderFailure(e.message));\n                reject(e.message);\n            });\n        });\n    }\n}\n\nexport function updateOrderStatus(steps){\n    return function(dispatch){      \n        dispatch(updateOrderStatusSuccess(steps));\n    }\n}\n\nexport function updateOrderStatusSuccess(steps){\n    return {type: types.UPDATE_ORDER_STATUS_SUCCESS, steps};\n}\n\nexport function downloadICS(_order){\n    let url = `${baseUri}/api/downloadICS`;\n    let options = {};\n    return function(dispatch){\n        axios.get(url, options)\n        .then(res => {\n            let _data = res.data;\n            console.log(_data)\n        }).catch(e => {\n            console.log(e)\n        });\n    }\n}\n\nexport function createICS(_order, _date){\n    let url = `${baseUri}/api/createICS`;\n    let options = {\n        params:{\n            order: _order,\n            date: _date\n        }\n    };\n    return function(dispatch){\n        return new Promise((resolve, reject)=>{\n            axios.post(url, options)\n            .then(res => {\n                let _data = res.data;\n                console.log(_data)\n                if(_data.error){\n                    reject(_data.error);\n                }else{\n                    resolve(_data);\n                }\n            }).catch(e => {\n                reject(e.message);\n            });\n        })\n    }\n}","import * as types from './actionTypes';\n\nexport function setPageInfoSuccess(data){\n    return {type: types.SET_PAGE_INFO_SUCCESS, data};\n}\n\nexport function setPageInfo(info){\n    return function(dispatch){\n        dispatch(setPageInfoSuccess(info));\n    }\n}","import React from 'react';\nimport * as _ from 'lodash';\n\nconst Products = (props) =>{\n    return _.map(props.products, (product)=>{\n        return (\n            <div className=\"\" key={product.id}>\n                <div className=\"media mt-2 mb-3\">\n                    <img src=\"https://images-na.ssl-images-amazon.com/images/I/91jzIGu5N-L._AC_AA100_.jpg\" className=\"mr-3\" alt=\"monitor\" />\n                    <div className=\"media-body\">\n                        <h5 className=\"mt-0\"><a href=\"#\">{product.title}</a></h5>\n                        {product.desc}\n                    </div>\n                </div>\n            \n                <dl className=\"row\">\n                <dt className=\"col-sm-3\">Quantity</dt>\n                    <dd className=\"col-sm-3\">{product.qty}</dd>\n                    <dd className=\"col-sm\"><a href=\"#\"><small>Change</small></a></dd>\n                </dl>\n                \n                <dl className=\"row\">\n                <dt className=\"col-sm-3\">Price</dt>\n                <dd className=\"col-sm\">${product.price}</dd>\n                </dl>\n            </div>\n        )\n    });\n}\n\nexport default Products;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as orderActions from '../actions/orderActions';\nimport * as pageActions from '../actions/pageActions';\nimport * as _ from 'lodash';\nimport Products from './Products';\n\nconst Order = (props) =>{\n    let subTotal = parseFloat(_.sumBy(props.order.products, 'price')),\n    fees = 7.43,\n    total = parseFloat(subTotal) + fees;\n\n    return (\n        <div className=\"\">\n            <Products products={props.order.products} />\n            <dl className=\"row\">\n            <dt className=\"col-sm-3\">Delivery</dt>\n                <dd className=\"col-sm-3\">Your Desk</dd>\n                <dd className=\"col-sm\"><a href=\"#\"><small>Change</small></a></dd>\n            </dl>\n            \n            <dl className=\"row\">\n            <dt className=\"col-sm-3\">Installation</dt>\n                <dd className=\"col-sm-3\">Contractor Provided</dd>\n                <dd className=\"col-sm\"><a href=\"#\"><small>Change</small></a></dd>\n            </dl>\n\n            <p>\n                <a className=\"\" data-toggle=\"collapse\" href=\"#collapseExample\" role=\"button\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\n                    Approval & Contract Details\n                </a> \n            </p>\n        \n            <div className=\"collapse\" id=\"collapseExample\">\n                <dl className=\"row\">\n                <dt className=\"col-sm-3\">Approval</dt>\n                <dd className=\"col-sm\">Manager Only</dd>\n                </dl>\n                \n                <dl className=\"row\">\n                <dt className=\"col-sm-3\">Contract</dt>\n                <dd className=\"col-sm\">CIO-CS</dd>\n                </dl>\n            </div>\n                \n            <p>\n                <a className=\"\" data-toggle=\"collapse\" href=\"#collapseExample2\" role=\"button\" aria-expanded=\"false\" aria-controls=\"collapseExample2\">\n                    Subtotal & Delivery Details\n                </a> \n            </p>\n                \n            <div className=\"collapse\" id=\"collapseExample2\">\n                <dl className=\"row\">\n                    <dt className=\"col-sm-3\">Subtotal</dt>\n                    <dd className=\"col-sm\">${subTotal}</dd>\n                </dl>\n            \n                <dl className=\"row\">\n                    <dt className=\"col-sm-3\">Delivery & Installation</dt>\n                    <dd className=\"col-sm\">${fees}</dd>\n                </dl>\n            </div>\n                \n            <dl className=\"row mt-3\">\n                <dt className=\"col-sm-3\">Total</dt>\n                <dd className=\"col-sm\"><strong className=\"text-success\">${total.toFixed(2)}</strong></dd>\n            </dl>\n        </div>\n    )\n}\n\nconst SubmitOrderButton = (props) =>{\n    return (\n        <div className=\"mt-3\">\n            <button type=\"button\" className=\"btn btn-primary btn-block btn-lg\" onClick={()=>{props.submitOrderFn()}}>Place Order</button>\n            <p className=\"mt-3\">Forgot something? <a href=\"#\">Continue shopping</a></p>  \n        </div>\n    )\n}\n\nclass CheckOut extends Component {\n    constructor(props){\n        super();\n        props.pageActions.setPageInfo({\n            title: 'Your Cart',\n            status: ''\n        });\n        this.state = {\n            isPlaced: false,\n            order: {\n                \"id\": 1,\n                \"placedDate\": null,\n                \"lastUpdateDate\": null,\n                \"user\":{\n                    \"username\": \"test_user1\",\n                    \"firstName\": \"justin\",\n                    \"lastName\": \"sarnik\",\n                    \"email\": \"justin.sarnik@bixal.com\"\n                },\n                \"products\":[\n                    {\n                        \"id\": 1,\n                        \"title\": \"LG 24M47VQ 24-Inch LED-lit Monitor\",\n                        \"desc\": \"Fulfilled by Acme Tech Inc.\",\n                        \"price\": 149.99,\n                        \"qty\": 1\n                    },\n                    // {\n                    //     \"id\": 2,\n                    //     \"title\": \"LG 26M47VQ 26-Inch LED-lit Monitor\",\n                    //     \"desc\": \"Fulfilled by Acme Tech Inc.\",\n                    //     \"price\": 199.99,\n                    //     \"qty\": 1\n                    // }\n                ],\n                \"steps\":[\n                    {\n                        \"id\": 1,\n                        \"status\": \"Order placed\",\n                        \"authority\": \"test_user1\",\n                        \"timestamp\": null,\n                        \"isPending\": true,\n                        \"isFilled\": false\n                    },\n                    {\n                        \"id\": 2,\n                        \"status\": \"Manager Approved\",\n                        \"authority\": \"Shaun Hernandez\",\n                        \"timestamp\": null,\n                        \"isPending\": true,\n                        \"isFilled\": false\n                    },\n                    {\n                        \"id\": 3,\n                        \"status\": \"Contractor Fulfilled\",\n                        \"authority\": \"Acme Tech Inc.\",\n                        \"timestamp\": null,\n                        \"isPending\": true,\n                        \"isFilled\": false\n                    },\n                    {\n                        \"id\": 4,\n                        \"status\": \"Arrived for delivery and installation\",\n                        \"authority\": \"CMS IT Depot\",\n                        \"timestamp\": null,\n                        \"isPending\": true,\n                        \"isFilled\": false\n                    }\n                ]\n            }\n        }\n    }\n\n    placeOrder = () =>{\n        this.props.orderActions.placeOrder(this.state.order).then(res =>{\n            this.setState({\n                order: res,\n                isPlaced: true\n            });\n            window.location.href = `/order-confirmation/${res.id}`;\n        }).catch(err=>{\n            console.log(err)\n        })\n    }\n\n    render() {\n        return(\n            <div className=\"\">\n                <Order order={this.state.order}></Order>\n                <SubmitOrderButton submitOrderFn={this.placeOrder}></SubmitOrderButton>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state, ownProps){\n    return {\n        order: state.order\n    };\n  }\n \n  function mapDispatchToProps(dispatch){\n   return {\n     orderActions: bindActionCreators(orderActions, dispatch),\n     pageActions: bindActionCreators(pageActions, dispatch)\n   };\n }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckOut);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as orderActions from '../actions/orderActions';\nimport * as pageActions from '../actions/pageActions';\nimport * as _ from 'lodash';\n\nclass OrderConfirm extends Component {\n    constructor(props){\n        super();\n        props.pageActions.setPageInfo({\n            title: 'Order Confirmation',\n            status: ''\n        });\n        this.orderId = props.match.params.id;\n        this.state = {\n            \n        }\n    }\n\n    componentDidMount = () =>{\n        this.props.orderActions.getOrder(this.orderId).then(res =>{\n            this.setState({\n                order: res\n            });\n        }).catch(err=>{\n            console.log(err)\n        })\n    }\n\n    handleButtonClick = () => {\n        window.location.href = `/order-status/${this.props.order.id}`;\n    }\n\n    render() {\n        return(\n          <div className=\"\">\n           \n            <div className=\"mt-2 mb-3\">\n                <p className=\"lead\">Woot! Your order has been placed.</p>\n            </div>\n            \n            <div className=\"text-center mb-3\">\n              <div className=\"row\">\n              <div className=\"col display-3\">\n               <i className=\"fa fa-thumbs-o-up text-success\"></i>\n              </div>\n              <div className=\"col\">\n                <img src=\"https://images-na.ssl-images-amazon.com/images/I/91jzIGu5N-L._AC_AA100_.jpg\" className=\"mr-3\" alt=\"monitor\"/>\n              </div>\n            </div>\n            \n          </div>\n            \n            <h2>What happens next?</h2>\n            <ol>\n              <li>You'll receieve an email with confirmation of your order.</li>\n              <li>The email will include a link for you to <a href=\"#\" onClick={()=>{this.handleButtonClick()}}>check the status</a> of your order.</li>\n              <li>We'll let you know when your order is ready for delivery and installation.</li>\n            </ol>\n            \n            <p className=\"mt-3\">Have a question or need to change something? <a href=\"\">Contact our Delivery & Installation team</a></p>\n            \n          </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state, ownProps){\n    return {\n        order: state.order\n    };\n  }\n \n  function mapDispatchToProps(dispatch){\n   return {\n     orderActions: bindActionCreators(orderActions, dispatch),\n     pageActions: bindActionCreators(pageActions, dispatch)\n   };\n }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderConfirm);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as orderActions from '../actions/orderActions';\nimport * as pageActions from '../actions/pageActions';\nimport * as _ from 'lodash';\nimport * as moment from 'moment';\nconst timeAgo = (date) => {\n    let a = moment(new Date()),\n    b = moment(date),\n    timeAgo = {\n        d: a.diff(b, 'days'),\n        h: a.diff(b, 'hours'),\n        m: a.diff(b, 'minutes'),\n        s: a.diff(b, 'seconds')\n    };    \n    return `${timeAgo.d ? `${timeAgo.d} days ago` : timeAgo.h ? `${timeAgo.h} hours ago` : timeAgo.m ? `${timeAgo.m} minutes ago` : timeAgo.s ? `${timeAgo.s} seconds ago` : '0 seconds ago'}`;\n};\n\nconst Steps = (props) =>{\n    let index = 0;\n    return _.map(props.steps, (step)=>{\n        index++;\n        let isLast = index === props.steps.length;\n        return (\n            <Step step={step} isLast={isLast} key={step.id} submitTicketFn={props.submitTicketFn}></Step>\n        )\n    });\n}\n\nconst Spacer = (props) =>{\n    return (\n        <div className=\"flex-container\">\n            <div className={`flex-item spacer ${props.type}`}></div>\n        </div>\n    )\n}\n\nconst Step = (props) =>{\n    let isBlocked = (props.step.timestamp && !props.step.isFilled) || (!props.step.isFilled && !props.step.isPending),\n    type = props.step.isFilled ? 'full' : 'half',\n    icon = props.step.isFilled ? 'fa-check-square-o' : isBlocked ? 'fa-times' : 'fa-square-o';\n\n    return (\n        <div>\n            <div className=\"media\">\n                <div className=\"h2\">\n                    <i className={`${icon} ${props.step.isFilled ? 'text-success' : 'text-secondary'} ${isBlocked ? 'text-failure' : ''} fa`} aria-hidden=\"true\"></i>\n                </div>\n                <div className=\"media-body ml-3\">\n                    <h5 className=\"mt-1 mb-0\">{props.step.status}</h5>\n                    <span className=\"text-muted\">{props.step.authority}{props.step.timestamp ? `, ${timeAgo(props.step.timestamp)}` : ''}</span>\n                </div>\n\n                \n            </div>\n            \n            {isBlocked ? \n                    <div className=\"alert alert-warning\">\"Oops! We've hit a snag here.\"<br/>\n              \n                    {props.step.ticket && !props.step.ticket.isResolved ?\n                        <button className=\"btn btn-link\"><i className=\"fa fa-comment\"></i> Connecting...</button>\n                    :\n                        <button className=\"btn btn-link\" onClick={()=>props.submitTicketFn(props.step.id)}><i className=\"fa fa-comment\"></i> Chat with HelpDesk</button>\n                    }\n                </div>\n                : null}\n            \n            {!props.isLast ? <Spacer type={type}></Spacer> : null}\n        </div>\n    )\n}\n\nconst ProductPreview = (props) =>{\n    return _.map(props.products, product => {\n        return (\n            <div className=\"media mt-2 mb-3\" key={product.id}>\n                <img src=\"https://images-na.ssl-images-amazon.com/images/I/91jzIGu5N-L._AC_AA100_.jpg\" className=\"mr-3\" alt=\"monitor\"/>\n                <div className=\"media-body\">\n                    <h5 className=\"mt-0\"><a href=\"#\">{product.title}</a></h5>\n                    {product.desc}\n                </div>\n            </div>\n        )\n    });\n}\n\nclass TrackOrder extends Component {\n    constructor(props){\n        super();\n        props.pageActions.setPageInfo({\n            title: 'Your Order Status',\n            status: 'Pending'\n        });\n        this.orderId = props.match.params.id;\n        this.state = {}\n    }\n\n    componentDidMount = () =>{\n        if(_.isEmpty(this.props.order)){\n            this.props.orderActions.getOrder(this.orderId).then(res =>{\n                this.fillStepsTimer(2, 3);\n            }).catch(err=>{\n                console.log(err)\n            })\n        }\n    }\n\n    componentDidUpdate = (prevProps) =>{\n        if(prevProps.order.steps !== this.props.order.steps){\n           if(_.findIndex(this.props.order.steps, {isFilled: false}) === -1){\n               this.setAllFilled();\n           }\n        }\n    }\n\n    setAllFilled(){\n        this.setState({\n            isReadyForPickup: true\n        })\n        this.props.pageActions.setPageInfo({\n            title: 'Your Order Status',\n            status: 'Arrived'\n        });\n    }\n\n    fillStepsTimer = (startStepId, unFilledStep) =>{\n        let stepId = startStepId,\n        interval = setInterval(()=>{\n            let _steps = _.cloneDeep(this.props.order.steps),\n            step = _.find(_steps, {'id': stepId}),\n            prevStep = _.find(_steps, {'id': stepId-1});\n\n            if(stepId <= _steps.length && prevStep.isFilled){\n                step.isPending = false;\n                step.isFilled = unFilledStep && unFilledStep === stepId ? false : true;\n                step.timestamp = new Date().getTime();\n                this.props.orderActions.updateOrderStatus(_steps);\n                stepId++;\n            }else{\n                clearInterval(interval);\n            }\n        }, 500) \n    }\n\n    submitTicket = (stepId) =>{\n        let _steps = _.cloneDeep(this.props.order.steps),\n        step = _.find(_steps, {'id': stepId});\n        step.ticket = {\n            timestamp: new Date().getTime(),\n            isResolved: false\n        }\n        this.props.orderActions.updateOrderStatus(_steps);\n\n        setTimeout(()=>{\n            let _steps = _.cloneDeep(this.props.order.steps),\n            step = _.find(_steps, {'id': stepId});\n\n            step.ticket.isResolved = true;\n            step.isFilled = true;\n            this.props.orderActions.updateOrderStatus(_steps);\n            this.fillStepsTimer(stepId + 1, null);\n        }, 1000);\n    }\n\n    handlePickupClick = () =>{\n        window.location.href = `/schedule-pickup/${this.props.order.id}`;\n    }\n\n    render() {\n        let products = this.props.order.products ? this.props.order.products : null;\n        return products ? (\n            <div className=\"status-container\">\n                <ProductPreview products={products}></ProductPreview>\n                <div className=\"steps-container\">\n                    <Steps steps={this.props.order.steps} submitTicketFn={this.submitTicket}></Steps>\n                    {this.state.isReadyForPickup ? \n                        <div className=\"mt-2 mb-3\">\n                            <button type=\"button\" className=\"btn btn-primary btn-block btn-lg\" onClick={()=>{this.handlePickupClick()}}>Schedule Pickup Date</button>\n                        </div>\n                    : null}\n                </div>\n            </div>\n        ) : null\n    }\n}\n\nfunction mapStateToProps(state, ownProps){\n    return {\n        order: state.order\n    };\n  }\n \n  function mapDispatchToProps(dispatch){\n   return {\n     orderActions: bindActionCreators(orderActions, dispatch),\n     pageActions: bindActionCreators(pageActions, dispatch)\n   };\n }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TrackOrder);\n","import * as types from './actionTypes';\nimport * as _ from 'lodash';\n\nexport function deleteNotificationSuccess(id){\n    return {type: types.DELETE_NOTIFICATION_SUCCESS, id};\n}\n\nexport function deleteNotification(notificationId){\n    return function(dispatch){\n        dispatch(deleteNotificationSuccess(notificationId));\n    }\n}\n\nexport function newNotificationSuccess(notification){\n    return {type: 'NEW_NOTIFICATION_SUCCESS', notification};\n}\n\nexport function mockTicketNotification(order, stepId){\n    return function(dispatch){\n        let step = _.find(order.steps, {'id': stepId}),\n        note = {\n            notificationType: 'ticket',\n            displayMessage: `Ticket Submitted: Order #:${order.id} | Blocked-Action: ${step.status}`,\n            timestamp: new Date(),\n            notificationId: new Date().getTime()\n        };\n        dispatch(newNotificationSuccess(note));\n    }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as orderActions from '../actions/orderActions';\nimport * as notificationActions from '../actions/notificationActions';\nimport * as pageActions from '../actions/pageActions';\nimport * as _ from 'lodash';\nimport * as moment from 'moment';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nconst baseUri = process.env.NODE_ENV === 'production' ? 'http://bixal-cms-prototype.herokuapp.com' : 'http://localhost:3001';\nconst tsFormat = (date) => moment(date).format('M/DD/YY hh:mm A').trim();\nconst tsFormatDay = (date) => moment(date).format('dddd - M/DD/YY').trim();\nconst tsTimeFormat = (date) => {\n       return `${moment(date).format('h').trim()} - ${moment(date).add(30, 'minutes').format('hh:mm A').trim()}`;\n}\n\nconst DatePicker = (props) =>{\n    return (\n        <MuiPickersUtilsProvider utils={props.utils}>\n            <Grid container className={props.classes} justify=\"space-around\">\n                <KeyboardDatePicker\n                    margin=\"normal\"\n                    id=\"mui-pickers-date\"\n                    label=\"Select Date\"\n                    value={props.selectedDate}\n                    onChange={props.handleDateChange}\n                    KeyboardButtonProps={{\n                    'aria-label': 'select date',\n                    }}\n                />\n                <KeyboardTimePicker\n                    margin=\"normal\"\n                    id=\"mui-pickers-time\"\n                    label=\"Select Time\"\n                    value={props.selectedDate}\n                    onChange={props.handleDateChange}\n                    KeyboardButtonProps={{\n                    'aria-label': 'select time',\n                    }}\n                />\n            </Grid>\n        </MuiPickersUtilsProvider>\n    )\n}\n\nconst Radios = (props) =>{\n    let times = [\n        new Date('6/25/2019 12:00:00 PM'),\n        new Date('6/25/2019 3:00:00 PM'),\n        new Date('6/26/2019 9:00:00 AM')\n    ];\n   \n    return _.map(times, (time)=>{\n        let _key = time.getTime();\n        return(\n            <label className=\"btn btn-outline-secondary btn-block text-left font-weight-bolder\" key={_key}>\n            <input type=\"radio\" autoComplete=\"off\" name=\"time\" id=\"time1\" onClick={()=>{props.handleDateChange(time)}} /> {tsFormatDay(time)} <br/>\n                    <small className=\"font-weight-normal pl-4\">{tsTimeFormat(time)}</small>\n            </label>\n        )\n    })\n}\n\nclass Schedule extends Component {\n    constructor(props){\n        super(props);\n        props.pageActions.setPageInfo({\n            title: 'Delivery & Installation',\n            status: ''\n        });\n\n        this.orderId = props.match.params.id;\n        this.state = {\n            selectedDate: new Date().getTime(),\n        }\n        this.classes = makeStyles({\n            grid: {\n              width: '60%',\n            },\n        });\n    }\n\n    componentDidMount = () =>{\n        if(_.isEmpty(this.props.order)){\n            this.props.orderActions.getOrder(this.orderId).then(res =>{\n\n            }).catch(err=>{\n\n            })\n        }\n    }\n\n    handleDateChange = (date) =>{\n        this.setState({\n            selectedDate: date\n        })\n    }\n\n    handleConfirm = () =>{\n        this.props.orderActions.createICS(this.props.order, this.state.selectedDate).then(res => {\n            this.setState({\n                isReadyForDownload: true\n            })\n            this.props.pageActions.setPageInfo({\n                title: \"You're all set!\",\n                status: ''\n            });\n        }).catch(err => {\n\n        })\n    }\n\n    handleDownloadICS = () =>{\n        window.open(`${baseUri}/api/downloadICS`);\n        //window.location.href = `${baseUri}/api/downloadICS`;\n    }\n\n    handleChooseDate = () =>{\n        this.setState({\n            isShowDatePicker: true\n        })\n    }\n\n    render() {\n        return(\n            <div className=\"schedule-container\">\n                {this.state.isReadyForDownload ?\n                    <div className=\"\">\n                        <div  className=\"mt-2 mb-3\">\n                            <p>Your appointment has been confirmed. We've sent you an email confirmation with a calendar invite. Or you can add it to your calendar directly below.</p>\n                        </div>\n                        \n                        <div className=\"text-center display-1 mb-3\">\n                            <i className=\"fa fa-calendar-check-o text-success\"></i>\n                        </div>\n                        \n                        <button type=\"button\" className=\"btn btn-primary btn-block btn-lg\" onClick={()=>{this.handleDownloadICS()}}>Add To Calendar</button>\n                        <p className=\"mt-3\">Have a question or need to change something? <a href=\"#\">Contact our Delivery & Installation team</a></p>  \n                    </div> \n                :\n                    <div className=\"\">\n                        <div className=\"mt-2 mb-3\">\n                            <p>We come to you when you're ready. Pick a time and a technician will show up with your order and help you get everything set up.</p>\n                            <p>Here are some times that appear to be free on your calendar:</p>\n                            <p className=\"d-none\">{tsFormat(this.state.selectedDate)}</p>\n                        </div>\n                        <Radios handleDateChange={this.handleDateChange}></Radios>\n                        {this.state.isShowDatePicker ?\n                            <DatePicker utils={DateFnsUtils} classes={this.classes} selectedDate={this.state.selectedDate} handleDateChange={this.handleDateChange}></DatePicker>\n                        : null}\n                        <button type=\"button\" className=\"btn btn-primary btn-block btn-lg\" onClick={()=>{this.handleConfirm()}}>Set Delivery Time</button>\n                        <p className=\"mt-3\">None of these work? <a href=\"#\" onClick={()=>{this.handleChooseDate()}}>Find another time</a></p>  \n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state, ownProps){\n    return {\n        order: state.order,\n        notifications: state.notifications\n    };\n  }\n \n  function mapDispatchToProps(dispatch){\n   return {\n     orderActions: bindActionCreators(orderActions, dispatch),\n     notificationActions: bindActionCreators(notificationActions, dispatch),\n     pageActions: bindActionCreators(pageActions, dispatch),\n   };\n }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Schedule);\n","import React from 'react';\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport CheckOut from './CheckOut';\nimport OrderConfirm from './OrderConfirm';\nimport TrackOrder from './TrackOrder';\nimport Schedule from './Schedule';\n\nconst Routes = (props) => {\n    return (\n        <div className=\"container\">\n            <Switch>\n                <Route exact path=\"/\" render={(props) => <CheckOut pageTitle={'Check Out'} {...props}/>} >\n                    <Route exact path=\"/checkout\" render={(props) => <CheckOut {...props}/>} />\n                </Route>\n                <Route exact path=\"/order-confirmation/:id\" render={(props) => <OrderConfirm {...props}/>} />\n                <Route exact path=\"/order-status/:id\" render={(props) => <TrackOrder {...props}/>} />\n                <Route exact path=\"/schedule-pickup/:id\" render={(props) => <Schedule {...props}/>} />\n            </Switch>\n        </div>\n    )\n};\n\nexport default Routes;","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport * as pageActions from '../actions/pageActions';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nclass HeaderBar extends Component {\n\n    render() {\n      return(\n        <nav className=\"navbar navbar-light bg-light\">\n          <span className=\"navbar-brand mb-0 h1\">{this.props.page.title}\n            {this.props.page.status ? <span>:<span className=\"text-success\"> {this.props.page.status}</span></span> : null}\n          </span>\n          <a className=\"\" href=\"/\"><i className=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i></a>\n        </nav>\n      )\n    }\n }\n \n function mapStateToProps(state, ownProps){\n  return {\n      page: state.page,\n  };\n}\n\nfunction mapDispatchToProps(dispatch){\n  return {\n      pageActions: bindActionCreators(pageActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (withRouter(HeaderBar));","import React from 'react';\nimport moment from 'moment';\nconst tsFormat = (date) => moment(date).format('M/DD/YY hh:mm A').trim();\n\nconst Notification = (props) => {\n    return (\n        <div className=\"notification\">\n            <div className=\"alert alert-info\" role=\"alert\">\n                <p>{tsFormat(props.time)}</p>\n                <p>{props.message}</p>\n                <button type=\"button\" className=\"btn btn-outline-info\" onClick={()=>{props.closeFn(props.id)}}>Close</button>\n            </div>\n        </div>\n    )\n};\n\nexport default Notification;","import React, { Component } from 'react';\nimport * as notificationActions from '../actions/notificationActions';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport Notification from './Notification';\nimport * as _ from 'lodash';\n\nclass Notifications extends Component {\n    constructor(props){\n        super();\n    }\n\n    handleCloseClick = (notificationId) =>{\n        this.props.notificationActions.deleteNotification(notificationId);\n    }\n\n    notificationsContainer = () =>{\n        let ordered = _.orderBy(this.props.notifications.model, ['timestamp'],['desc']);\n        return _.map(ordered, note =>{\n            return(\n                <Notification isAnimate={true} type={note.side} message={note.displayMessage} time={note.timestamp} id={note.notificationId} closeFn={this.handleCloseClick} isFixed={false} key={note.id}/>\n            )\n        });\n    }\n\n    render() {\n        return this.props.notifications.model ? (\n            <div className=\"notifications-container flex-container column\">\n                {this.notificationsContainer()}\n            </div>\n        ) : null;\n    }\n }\n\nfunction mapStateToProps(state, ownProps){\n    return {\n        notifications: state.notifications,\n    };\n}\n\nfunction mapDispatchToProps(dispatch){\n    return {\n        notificationActions: bindActionCreators(notificationActions, dispatch)\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Notifications);\n","import React, { Component } from 'react';\nimport Routes from './components/Routes';\nimport HeaderBar from './components/HeaderBar';\nimport Notifications from './components/Notifications';\n\nclass App extends Component {\n  constructor(props){\n    super();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n          <HeaderBar/>\n          <Routes />\n          <Notifications />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport rootReducer from '../reducers';\nimport reduxImmutableStateInvariant from 'redux-immutable-state-invariant';\nimport thunk from 'redux-thunk';\n\nexport default function configureStore(initialState){\n    return createStore(\n        rootReducer,\n        initialState,\n        applyMiddleware(thunk, reduxImmutableStateInvariant())\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport configureStore from './store/configureStore';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap';\nimport './css/main.css';\n\nconst store = configureStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App/>\n        </Router>\n    </Provider>\n, \ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}