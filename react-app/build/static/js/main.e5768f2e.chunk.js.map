{"version":3,"sources":["actions/actionTypes.js","reducers/ordersReducer.js","reducers/notificationsReducer.js","reducers/pageReducer.js","reducers/index.js","actions/orderActions.js","actions/pageActions.js","components/Products.js","components/CheckOut.js","components/OrderConfirm.js","actions/notificationActions.js","components/TrackOrder.js","components/Schedule.js","components/Routes.js","components/HeaderBar.js","components/Notification.js","components/Notifications.js","App.js","serviceWorker.js","store/configureStore.js","index.js"],"names":["SET_ORDER_SUCCESS","SET_ORDER_FAILURE","UPDATE_ORDER_STATUS_SUCCESS","DELETE_NOTIFICATION_SUCCESS","NEW_NOTIFICATION_SUCCESS","SET_PAGE_INFO_SUCCESS","initialState","model","title","status","rootReducer","combineReducers","order","state","arguments","length","undefined","action","type","types","Object","objectSpread","steps","notifications","defineProperty","notification","notificationId","clone","_","id","page","data","baseUri","setOrderSuccess","setOrderFailure","placeOrder","_order","url","concat","options","params","dispatch","Promise","resolve","reject","axios","then","res","_data","error","catch","e","message","getOrder","_orderId","orderId","updateOrderStatus","updateOrderStatusSuccess","downloadICS","console","log","createICS","_date","date","setPageInfoSuccess","setPageInfo","info","Products","props","products","product","react_default","a","createElement","className","key","src","alt","href","desc","qty","price","Order","subTotal","total","components_Products","data-toggle","role","aria-expanded","aria-controls","SubmitOrderButton","onClick","submitOrderFn","CheckOut","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","orderActions","setState","isPlaced","window","location","err","pageActions","placedDate","lastUpdateDate","user","username","firstName","lastName","email","authority","timestamp","isPending","isFilled","CheckOut_Order","CheckOut_SubmitOrderButton","Component","connect","ownProps","bindActionCreators","OrderConfirm","componentDidMount","handleButtonClick","match","_this2","deleteNotificationSuccess","deleteNotification","newNotificationSuccess","mockTicketNotification","stepId","step","notificationType","displayMessage","Date","getTime","Steps","index","isLast","TrackOrder_Step","submitTicketFn","Spacer","Step","isBlocked","aria-hidden","moment","b","timeAgo","d","diff","h","m","s","ticket","isResolved","format","trim","TrackOrder_Spacer","ProductPreview","TrackOrder","fillStepsTimer","componentDidUpdate","prevProps","setAllFilled","startStepId","unFilledStep","interval","setInterval","_steps","prevStep","clearInterval","submitTicket","notificationActions","setTimeout","handlePickupClick","isReadyForPickup","TrackOrder_ProductPreview","TrackOrder_Steps","DatePicker","material_ui_pickers_esm","utils","Grid","container","classes","justify","margin","label","value","selectedDate","onChange","handleDateChange","KeyboardButtonProps","aria-label","Radios","times","time","autoComplete","name","add","tsTimeFormat","Schedule","handleConfirm","isReadyForDownload","handleDownloadICS","handleChooseDate","isShowDatePicker","makeStyles","grid","width","Schedule_Radios","Schedule_DatePicker","DateFnsUtils","Routes","Switch","Route","exact","path","render","components_CheckOut","assign","pageTitle","components_OrderConfirm","components_TrackOrder","components_Schedule","HeaderBar","class","withRouter","Notification","closeFn","Notifications","handleCloseClick","notificationsContainer","ordered","note","components_Notification","isAnimate","side","isFixed","App","components_HeaderBar","components_Routes","components_Notifications","Boolean","hostname","store","createStore","applyMiddleware","thunk","reduxImmutableStateInvariant","ReactDOM","react_redux_es","BrowserRouter","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e5768f2e.chunk.js","sourcesContent":["//Orders\nexport const SET_ORDER_SUCCESS = 'SET_ORDER_SUCCESS';\nexport const SET_ORDER_FAILURE = 'SET_ORDER_FAILURE';\n\nexport const SET_ORDER_STATUS_SUCCESS = 'SET_ORDER_STATUS_SUCCESS';\nexport const SET_ORDER_STATUS_FAILURE = 'SET_ORDER_STATUS_FAILURE';\n\nexport const UPDATE_ORDER_STATUS_SUCCESS = 'UPDATE_ORDER_STATUS_SUCCESS';\nexport const UPDATE_ORDER_STATUS_FAILURE = 'UPDATE_ORDER_STATUS_FAILURE';\n\n//NOTIFICATIONS\nexport const DELETE_NOTIFICATION_SUCCESS = 'DELETE_NOTIFICATION_SUCCESS';\nexport const NEW_NOTIFICATION_SUCCESS = 'NEW_NOTIFICATION_SUCCESS';\n\n//PAGES\nexport const SET_PAGE_INFO_SUCCESS = 'SET_PAGE_INFO_SUCCESS';","import * as types from '../actions/actionTypes';\nimport * as _ from 'lodash';\n\nconst initialState =  {};\n\nexport default function ordersReducer(state = initialState, action){\n    switch(action.type){\n        case types.SET_ORDER_SUCCESS:\n            return action.order;\n        case types.UPDATE_ORDER_STATUS_SUCCESS:\n            return {\n                ...state, steps: action.steps\n            }\n        default:\n            return state;\n    }\n}","import * as types from '../actions/actionTypes';\nimport * as _ from 'lodash';\n\nconst initialState =  {\n    model: {}\n}\n\nexport default function notificationsReducer(state = initialState, action){\n    switch(action.type){\n        case 'TEST_NOTIFICATION':\n            return {\n                ...state, model: {\n                    ...state.model, \n                        [action.notification.notificationId]: action.notification\n                }\n            };\n\n        case types.NEW_NOTIFICATION_SUCCESS:\n            return{\n                ...state, model: {\n                    ...state.model, \n                        [action.notification.notificationId]: action.notification\n                }\n            }\n        \n        case types.DELETE_NOTIFICATION_SUCCESS:\n            let clone = _.cloneDeep(state.model);\n            delete clone[action.id];\n            clone = action.id === -1 ? {} : clone;\n            return {\n                ...state, \n                model: clone\n            };\n        default:\n            return state;\n    }\n}","import * as types from '../actions/actionTypes';\n\nconst initialState =  {\n    title: '',\n    status: ''\n};\n\nexport default function pageReducer(state = initialState, action){\n    switch(action.type){\n        case types.SET_PAGE_INFO_SUCCESS:\n            return action.data;\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport order from './ordersReducer';\nimport notifications from './notificationsReducer';\nimport page from './pageReducer';\n\nconst rootReducer = combineReducers({\n    order,\n    notifications,\n    page\n});\n\nexport default rootReducer;","import * as types from './actionTypes';\nimport * as _ from 'lodash';\nimport * as axios from 'axios';\n\nconst baseUri = process.env.NODE_ENV === 'production' ? 'https://bixal-cms-prototype.herokuapp.com' : 'http://localhost:3001';\n\nexport function setOrderSuccess(order){\n    return {type: types.SET_ORDER_SUCCESS, order};\n}\n\nexport function setOrderFailure(order){\n    return {type: types.SET_ORDER_FAILURE, order};\n}\n\nexport function placeOrder(_order){\n    let url = `${baseUri}/api/placeOrder`;\n    let options = {\n        params:{\n            order: _order\n        }\n    };\n    \n    return function(dispatch){\n        return new Promise((resolve, reject)=>{\n            axios.post(url, options)\n            .then(res => {\n                let _data = res.data;\n                if(_data.error){\n                    dispatch(setOrderFailure(_data.error));\n                    reject(_data.error);\n                }else{\n                    dispatch(setOrderSuccess(_data));\n                    resolve(_data);\n                }\n            }).catch(e => {\n                dispatch(setOrderSuccess(e.message));\n                reject(e.message);\n            });\n        });\n    }\n}\n\nexport function getOrder(_orderId){\n    let url = `${baseUri}/api/getOrder`;\n    let options = {\n        params:{\n            orderId: `order_${_orderId}`\n        }\n    };\n    \n    return function(dispatch){\n        return new Promise((resolve, reject)=>{\n            axios.post(url, options)\n            .then(res => {\n                let _data = res.data;\n                if(_data.error){\n                    dispatch(setOrderFailure(_data.error));\n                    reject(_data.error);\n                }else{\n                    dispatch(setOrderSuccess(_data));\n                    resolve(_data);\n                }\n            }).catch(e => {\n                dispatch(setOrderFailure(e.message));\n                reject(e.message);\n            });\n        });\n    }\n}\n\nexport function updateOrderStatus(steps){\n    return function(dispatch){      \n        dispatch(updateOrderStatusSuccess(steps));\n    }\n}\n\nexport function updateOrderStatusSuccess(steps){\n    return {type: types.UPDATE_ORDER_STATUS_SUCCESS, steps};\n}\n\nexport function downloadICS(_order){\n    let url = `${baseUri}/api/downloadICS`;\n    let options = {};\n    return function(dispatch){\n        axios.get(url, options)\n        .then(res => {\n            let _data = res.data;\n            console.log(_data)\n        }).catch(e => {\n            console.log(e)\n        });\n    }\n}\n\nexport function createICS(_order, _date){\n    let url = `${baseUri}/api/createICS`;\n    let options = {\n        params:{\n            order: _order,\n            date: _date\n        }\n    };\n    return function(dispatch){\n        return new Promise((resolve, reject)=>{\n            axios.post(url, options)\n            .then(res => {\n                let _data = res.data;\n                console.log(_data)\n                if(_data.error){\n                    reject(_data.error);\n                }else{\n                    resolve(_data);\n                }\n            }).catch(e => {\n                reject(e.message);\n            });\n        })\n    }\n}","import * as types from './actionTypes';\n\nexport function setPageInfoSuccess(data){\n    return {type: types.SET_PAGE_INFO_SUCCESS, data};\n}\n\nexport function setPageInfo(info){\n    return function(dispatch){\n        dispatch(setPageInfoSuccess(info));\n    }\n}","import React from 'react';\nimport * as _ from 'lodash';\n\nconst Products = (props) =>{\n    return _.map(props.products, (product)=>{\n        return (\n            <div className=\"\" key={product.id}>\n                <div className=\"media mt-2 mb-3\">\n                    <img src=\"https://images-na.ssl-images-amazon.com/images/I/91jzIGu5N-L._AC_AA100_.jpg\" className=\"mr-3\" alt=\"monitor\" />\n                    <div className=\"media-body\">\n                        <h5 className=\"mt-0\"><a href=\"#\">{product.title}</a></h5>\n                        {product.desc}\n                    </div>\n                </div>\n            \n                <dl className=\"row\">\n                <dt className=\"col-sm-3\">Quantity</dt>\n                    <dd className=\"col-sm-3\">{product.qty}</dd>\n                    <dd className=\"col-sm\"><a href=\"#\"><small>Change</small></a></dd>\n                </dl>\n                \n                <dl className=\"row\">\n                <dt className=\"col-sm-3\">Price</dt>\n                <dd className=\"col-sm\">${product.price}</dd>\n                </dl>\n            </div>\n        )\n    });\n}\n\nexport default Products;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as orderActions from '../actions/orderActions';\nimport * as pageActions from '../actions/pageActions';\nimport * as _ from 'lodash';\nimport Products from './Products';\n\nconst Order = (props) =>{\n\n    let subTotal = _.sumBy(props.order.products, 'price'),\n    fees = 7.43,\n    total = subTotal + fees;\n\n    return (\n        <div className=\"container\">\n            <Products products={props.order.products} />\n            <dl className=\"row\">\n            <dt className=\"col-sm-3\">Delivery</dt>\n                <dd className=\"col-sm-3\">Your Desk</dd>\n                <dd className=\"col-sm\"><a href=\"#\"><small>Change</small></a></dd>\n            </dl>\n            \n            <dl className=\"row\">\n            <dt className=\"col-sm-3\">Installation</dt>\n                <dd className=\"col-sm-3\">Contractor Provided</dd>\n                <dd className=\"col-sm\"><a href=\"#\"><small>Change</small></a></dd>\n            </dl>\n\n            <p>\n                <a className=\"\" data-toggle=\"collapse\" href=\"#collapseExample\" role=\"button\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\n                    Approval & Contract Details\n                </a> \n            </p>\n        \n            <div className=\"collapse\" id=\"collapseExample\">\n                <dl className=\"row\">\n                <dt className=\"col-sm-3\">Approval</dt>\n                <dd className=\"col-sm\">Manager Only</dd>\n                </dl>\n                \n                <dl className=\"row\">\n                <dt className=\"col-sm-3\">Contract</dt>\n                <dd className=\"col-sm\">CIO-CS</dd>\n                </dl>\n            </div>\n                \n            <p>\n                <a className=\"\" data-toggle=\"collapse\" href=\"#collapseExample2\" role=\"button\" aria-expanded=\"false\" aria-controls=\"collapseExample2\">\n                    Subtotal & Delivery Details\n                </a> \n            </p>\n                \n            <div className=\"collapse\" id=\"collapseExample2\">\n                <dl className=\"row\">\n                    <dt className=\"col-sm-3\">Subtotal</dt>\n                    <dd className=\"col-sm\">${subTotal}</dd>\n                </dl>\n            \n                <dl className=\"row\">\n                    <dt className=\"col-sm-3\">Delivery & Installation</dt>\n                    <dd className=\"col-sm\">${fees}</dd>\n                </dl>\n            </div>\n                \n            <dl className=\"row mt-3\">\n                <dt className=\"col-sm-3\">Total</dt>\n                <dd className=\"col-sm\"><strong className=\"text-success\">${total}</strong></dd>\n            </dl>\n        </div>\n    )\n}\n\nconst SubmitOrderButton = (props) =>{\n    return (\n        <div className=\"container mt-3\">\n            <button type=\"button\" className=\"btn btn-primary btn-block btn-lg\" onClick={()=>{props.submitOrderFn()}}>Place Order</button>\n            <p className=\"mt-3\">Forgot something? <a href=\"#\">Continue shopping</a></p>  \n        </div>\n    )\n}\n\nclass CheckOut extends Component {\n    constructor(props){\n        super();\n        props.pageActions.setPageInfo({\n            title: 'Your Cart',\n            status: ''\n        });\n        this.state = {\n            isPlaced: false,\n            order: {\n                \"id\": 1,\n                \"placedDate\": null,\n                \"lastUpdateDate\": null,\n                \"user\":{\n                    \"username\": \"test_user1\",\n                    \"firstName\": \"justin\",\n                    \"lastName\": \"sarnik\",\n                    \"email\": \"justin.sarnik@bixal.com\"\n                },\n                \"products\":[\n                    {\n                        \"id\": 1,\n                        \"title\": \"LG 24M47VQ 24-Inch LED-lit Monitor\",\n                        \"desc\": \"Fulfilled by Acme Tech Inc.\",\n                        \"price\": 149.99,\n                        \"qty\": 1\n                    },\n                    {\n                        \"id\": 2,\n                        \"title\": \"LG 26M47VQ 26-Inch LED-lit Monitor\",\n                        \"desc\": \"Fulfilled by Acme Tech Inc.\",\n                        \"price\": 199.99,\n                        \"qty\": 1\n                    }\n                ],\n                \"steps\":[\n                    {\n                        \"id\": 1,\n                        \"status\": \"Order placed\",\n                        \"authority\": \"test_user1\",\n                        \"timestamp\": null,\n                        \"isPending\": true,\n                        \"isFilled\": false\n                    },\n                    {\n                        \"id\": 2,\n                        \"status\": \"Manager Approved\",\n                        \"authority\": \"Shaun Hernandez\",\n                        \"timestamp\": null,\n                        \"isPending\": true,\n                        \"isFilled\": false\n                    },\n                    {\n                        \"id\": 3,\n                        \"status\": \"Contractor Fulfilled\",\n                        \"authority\": \"Acme Tech Inc.\",\n                        \"timestamp\": null,\n                        \"isPending\": true,\n                        \"isFilled\": false\n                    },\n                    {\n                        \"id\": 4,\n                        \"status\": \"Arrived for delivery and installation\",\n                        \"authority\": \"CMS IT Depot\",\n                        \"timestamp\": null,\n                        \"isPending\": true,\n                        \"isFilled\": false\n                    }\n                ]\n            }\n        }\n    }\n\n    placeOrder = () =>{\n        this.props.orderActions.placeOrder(this.state.order).then(res =>{\n            this.setState({\n                order: res,\n                isPlaced: true\n            });\n            window.location.href = `/order-confirmation/${res.id}`;\n        }).catch(err=>{\n            console.log(err)\n        })\n    }\n\n    render() {\n        return(\n            <div className=\"container\">\n                <Order order={this.state.order}></Order>\n                <SubmitOrderButton submitOrderFn={this.placeOrder}></SubmitOrderButton>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state, ownProps){\n    return {\n        order: state.order\n    };\n  }\n \n  function mapDispatchToProps(dispatch){\n   return {\n     orderActions: bindActionCreators(orderActions, dispatch),\n     pageActions: bindActionCreators(pageActions, dispatch)\n   };\n }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckOut);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as orderActions from '../actions/orderActions';\nimport * as pageActions from '../actions/pageActions';\nimport * as _ from 'lodash';\n\nclass OrderConfirm extends Component {\n    constructor(props){\n        super();\n        props.pageActions.setPageInfo({\n            title: 'Order Confirmation',\n            status: ''\n        });\n        this.orderId = props.match.params.id;\n        this.state = {\n            \n        }\n    }\n\n    componentDidMount = () =>{\n        this.props.orderActions.getOrder(this.orderId).then(res =>{\n            this.setState({\n                order: res\n            });\n        }).catch(err=>{\n            console.log(err)\n        })\n    }\n\n    handleButtonClick = () => {\n        window.location.href = `/order-status/${this.props.order.id}`;\n    }\n\n    render() {\n        return(\n          <div className=\"container\">\n           \n            <div className=\"mt-2 mb-3\">\n                <p className=\"lead\">Woot! Your order has been placed.</p>\n            </div>\n            \n            <div className=\"text-center mb-3\">\n              <div className=\"row\">\n              <div className=\"col display-3\">\n               <i className=\"fa fa-thumbs-up text-success\"></i>\n              </div>\n              <div className=\"col\">\n                <img src=\"https://images-na.ssl-images-amazon.com/images/I/91jzIGu5N-L._AC_AA100_.jpg\" className=\"mr-3\" alt=\"monitor\"/>\n              </div>\n            </div>\n            \n          </div>\n            \n            <h2>What happens next?</h2>\n            <ol>\n              <li>You'll receieve an email with confirmation of your order.</li>\n              <li>The email will include a link for you to <a href=\"#\" onClick={()=>{this.handleButtonClick()}}>check the status</a> of your order.</li>\n              <li>We'll let you know when your order is ready for delivery and installation.</li>\n            </ol>\n            \n            <p className=\"mt-3\">Have a question or need to change something? <a href=\"\">Contact our Delivery & Installation team</a></p>\n            \n          </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state, ownProps){\n    return {\n        order: state.order\n    };\n  }\n \n  function mapDispatchToProps(dispatch){\n   return {\n     orderActions: bindActionCreators(orderActions, dispatch),\n     pageActions: bindActionCreators(pageActions, dispatch)\n   };\n }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderConfirm);\n","import * as types from './actionTypes';\nimport * as _ from 'lodash';\n\nexport function deleteNotificationSuccess(id){\n    return {type: types.DELETE_NOTIFICATION_SUCCESS, id};\n}\n\nexport function deleteNotification(notificationId){\n    return function(dispatch){\n        dispatch(deleteNotificationSuccess(notificationId));\n    }\n}\n\nexport function newNotificationSuccess(notification){\n    return {type: 'NEW_NOTIFICATION_SUCCESS', notification};\n}\n\nexport function mockTicketNotification(order, stepId){\n    return function(dispatch){\n        let step = _.find(order.steps, {'id': stepId}),\n        note = {\n            notificationType: 'ticket',\n            displayMessage: `Ticket Submitted: Order #:${order.id} | Blocked-Action: ${step.status}`,\n            timestamp: new Date(),\n            notificationId: new Date().getTime()\n        };\n        dispatch(newNotificationSuccess(note));\n    }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as orderActions from '../actions/orderActions';\nimport * as notificationActions from '../actions/notificationActions';\nimport * as pageActions from '../actions/pageActions';\nimport * as _ from 'lodash';\nimport * as moment from 'moment';\nconst tsFormat = (date) => moment(date).format('M/DD/YY hh:mm A').trim();\nconst timeAgo = (date) => {\n    let a = moment(new Date()),\n    b = moment(date),\n    timeAgo = {\n        d: a.diff(b, 'days'),\n        h: a.diff(b, 'hours'),\n        m: a.diff(b, 'minutes'),\n        s: a.diff(b, 'seconds')\n    };    \n    return `${timeAgo.d ? `${timeAgo.d} days ago` : timeAgo.h ? `${timeAgo.h} hours ago` : timeAgo.m ? `${timeAgo.m} minutes ago` : timeAgo.s ? `${timeAgo.s} seconds ago` : '0 seconds ago'}`;\n};\n\nconst Steps = (props) =>{\n    let index = 0;\n    return _.map(props.steps, (step)=>{\n        index++;\n        let isLast = index === props.steps.length;\n        return (\n            <Step step={step} isLast={isLast} key={step.id} submitTicketFn={props.submitTicketFn}></Step>\n        )\n    });\n}\n\nconst Spacer = (props) =>{\n    return (\n        <div className=\"flex-container\">\n            <div className={`flex-item spacer ${props.type}`}></div>\n        </div>\n    )\n}\n\nconst Step = (props) =>{\n    let isBlocked = (props.step.timestamp && !props.step.isFilled) || (!props.step.isFilled && !props.step.isPending),\n    type = props.step.isFilled ? 'full' : 'half';\n    return (\n        <div>\n            <div className=\"media\">\n                <div className=\"h2\">\n                    <i className={`${props.step.isFilled ? 'text-success' : ''} ${isBlocked ? 'fa-times text-failure' : 'fa-check-square'} fa`} aria-hidden=\"true\"></i>\n                </div>\n                <div className=\"media-body ml-3\">\n                    <h5 className=\"mt-1 mb-0\">{props.step.status}</h5>\n                    <span className=\"text-muted\">{props.step.authority}{props.step.timestamp ? `, ${timeAgo(props.step.timestamp)}` : ''}</span>\n                </div>\n\n                {isBlocked ? \n                    <div className=\"media-body ml-3\">\n                    <span className=\"text-muted\">\n                        This step is taking longer than average to proceed.\n                    </span>\n                    {props.step.ticket && !props.step.ticket.isResolved ?\n                        <span>Ticket Submitted: {tsFormat(props.step.ticket.timestamp)}</span>\n                    :\n                        <button className=\"btn btn-link\" onClick={()=>props.submitTicketFn(props.step.id)}>Submit Ticket</button>\n                    }\n                </div>\n                : null}\n            </div>\n            \n            {!props.isLast ? <Spacer type={type}></Spacer> : null}\n        </div>\n    )\n}\n\nconst ProductPreview = (props) =>{\n    return _.map(props.products, product => {\n        return (\n            <div className=\"media mt-2 mb-3\" key={product.id}>\n                <img src=\"https://images-na.ssl-images-amazon.com/images/I/91jzIGu5N-L._AC_AA100_.jpg\" className=\"mr-3\" alt=\"monitor\"/>\n                <div className=\"media-body\">\n                    <h5 className=\"mt-0\"><a href=\"#\">{product.title}</a></h5>\n                    {product.desc}\n                </div>\n            </div>\n        )\n    });\n}\n\nclass TrackOrder extends Component {\n    constructor(props){\n        super();\n        props.pageActions.setPageInfo({\n            title: 'Your Order Status',\n            status: 'Pending'\n        });\n        this.orderId = props.match.params.id;\n        this.state = {}\n    }\n\n    componentDidMount = () =>{\n        if(_.isEmpty(this.props.order)){\n            this.props.orderActions.getOrder(this.orderId).then(res =>{\n                this.fillStepsTimer(2, 3);\n            }).catch(err=>{\n                console.log(err)\n            })\n        }\n    }\n\n    componentDidUpdate = (prevProps) =>{\n        if(prevProps.order.steps !== this.props.order.steps){\n           if(_.findIndex(this.props.order.steps, {isFilled: false}) === -1){\n               this.setAllFilled();\n           }\n        }\n    }\n\n    setAllFilled(){\n        this.setState({\n            isReadyForPickup: true\n        })\n        this.props.pageActions.setPageInfo({\n            title: 'Your Order Status',\n            status: 'Arrived'\n        });\n    }\n\n    fillStepsTimer = (startStepId, unFilledStep) =>{\n        let stepId = startStepId,\n        interval = setInterval(()=>{\n            let _steps = _.cloneDeep(this.props.order.steps),\n            step = _.find(_steps, {'id': stepId}),\n            prevStep = _.find(_steps, {'id': stepId-1});\n\n            if(stepId <= _steps.length && prevStep.isFilled){\n                step.isPending = false;\n                step.isFilled = unFilledStep && unFilledStep === stepId ? false : true;\n                step.timestamp = new Date().getTime();\n                this.props.orderActions.updateOrderStatus(_steps);\n                stepId++;\n            }else{\n                clearInterval(interval);\n            }\n        }, 500) \n    }\n\n    submitTicket = (stepId) =>{\n        let _steps = _.cloneDeep(this.props.order.steps),\n        step = _.find(_steps, {'id': stepId});\n        step.ticket = {\n            timestamp: new Date().getTime(),\n            isResolved: false\n        }\n        this.props.orderActions.updateOrderStatus(_steps);\n        this.props.notificationActions.mockTicketNotification(this.props.order, stepId);\n\n        setTimeout(()=>{\n            let _steps = _.cloneDeep(this.props.order.steps),\n            step = _.find(_steps, {'id': stepId});\n\n            step.ticket.isResolved = true;\n            step.isFilled = true;\n            this.props.orderActions.updateOrderStatus(_steps);\n            this.fillStepsTimer(stepId + 1, null);\n        }, 1000);\n    }\n\n    handlePickupClick = () =>{\n        window.location.href = `/schedule-pickup/${this.props.order.id}`;\n    }\n\n    render() {\n        let products = this.props.order.products ? this.props.order.products : null;\n        return products ? (\n            <div className=\"status-container\">\n                <ProductPreview products={products}></ProductPreview>\n                <div className=\"steps-container\">\n                    <Steps steps={this.props.order.steps} submitTicketFn={this.submitTicket}></Steps>\n                    {this.state.isReadyForPickup ? \n                        <div className=\"mt-2 mb-3\">\n                            <button type=\"button\" className=\"btn btn-primary btn-block btn-lg\" onClick={()=>{this.handlePickupClick()}}>Schedule Pickup Date</button>\n                        </div>\n                    : null}\n                </div>\n            </div>\n        ) : null\n    }\n}\n\nfunction mapStateToProps(state, ownProps){\n    return {\n        order: state.order,\n        notifications: state.notifications\n    };\n  }\n \n  function mapDispatchToProps(dispatch){\n   return {\n     orderActions: bindActionCreators(orderActions, dispatch),\n     notificationActions: bindActionCreators(notificationActions, dispatch),\n     pageActions: bindActionCreators(pageActions, dispatch)\n   };\n }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TrackOrder);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as orderActions from '../actions/orderActions';\nimport * as notificationActions from '../actions/notificationActions';\nimport * as pageActions from '../actions/pageActions';\nimport * as _ from 'lodash';\nimport * as moment from 'moment';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nconst baseUri = process.env.NODE_ENV === 'production' ? 'https://bixal-cms-prototype.herokuapp.com' : 'http://localhost:3001';\nconst tsFormat = (date) => moment(date).format('M/DD/YY hh:mm A').trim();\nconst tsFormatDay = (date) => moment(date).format('dddd - M/DD/YY').trim();\nconst tsTimeFormat = (date) => {\n       return `${moment(date).format('h').trim()} - ${moment(date).add(30, 'minutes').format('hh:mm A').trim()}`;\n}\n\nconst DatePicker = (props) =>{\n    return (\n        <MuiPickersUtilsProvider utils={props.utils}>\n            <Grid container className={props.classes} justify=\"space-around\">\n                <KeyboardDatePicker\n                    margin=\"normal\"\n                    id=\"mui-pickers-date\"\n                    label=\"Select Date\"\n                    value={props.selectedDate}\n                    onChange={props.handleDateChange}\n                    KeyboardButtonProps={{\n                    'aria-label': 'select date',\n                    }}\n                />\n                <KeyboardTimePicker\n                    margin=\"normal\"\n                    id=\"mui-pickers-time\"\n                    label=\"Select Time\"\n                    value={props.selectedDate}\n                    onChange={props.handleDateChange}\n                    KeyboardButtonProps={{\n                    'aria-label': 'select time',\n                    }}\n                />\n            </Grid>\n        </MuiPickersUtilsProvider>\n    )\n}\n\nconst Radios = (props) =>{\n    let times = [\n        new Date('2019-06-25 12:00:00 PM'),\n        new Date('2019-06-25 3:00:00 PM'),\n        new Date('2019-06-26 9:00:00 AM')\n    ];\n    return _.map(times, (time)=>{\n        return(\n            <label className=\"btn btn-outline-secondary btn-block text-left font-weight-bolder\" key={time.getTime()}>\n            <input type=\"radio\" autoComplete=\"off\" name=\"time\" id=\"time1\" onClick={()=>{props.handleDateChange(time)}} /> {tsFormatDay(time)} <br/>\n                    <small className=\"font-weight-normal pl-4\">{tsTimeFormat(time)}</small>\n            </label>\n        )\n    })\n}\n\nclass Schedule extends Component {\n    constructor(props){\n        super(props);\n        props.pageActions.setPageInfo({\n            title: 'Delivery & Installation',\n            status: ''\n        });\n\n        this.orderId = props.match.params.id;\n        this.state = {\n            selectedDate: new Date().getTime(),\n        }\n        this.classes = makeStyles({\n            grid: {\n              width: '60%',\n            },\n        });\n    }\n\n    componentDidMount = () =>{\n        if(_.isEmpty(this.props.order)){\n            this.props.orderActions.getOrder(this.orderId).then(res =>{\n\n            }).catch(err=>{\n\n            })\n        }\n    }\n\n    handleDateChange = (date) =>{\n        this.setState({\n            selectedDate: date\n        })\n    }\n\n    handleConfirm = () =>{\n        this.props.orderActions.createICS(this.props.order, this.state.selectedDate).then(res => {\n            this.setState({\n                isReadyForDownload: true\n            })\n            this.props.pageActions.setPageInfo({\n                title: \"You're all set!\",\n                status: ''\n            });\n        }).catch(err => {\n\n        })\n    }\n\n    handleDownloadICS = () =>{\n        window.location.href = `${baseUri}/api/downloadICS`;\n    }\n\n    handleChooseDate = () =>{\n        this.setState({\n            isShowDatePicker: true\n        })\n    }\n\n    render() {\n        return(\n            <div className=\"schedule-container\">\n                {this.state.isReadyForDownload ?\n                    <div className=\"container\">\n                        <div  className=\"mt-2 mb-3\">\n                            <p>Your appointment has been confirmed. We've sent you an email confirmation with a calendar invite. Or you can add it to your calendar directly below.</p>\n                        </div>\n                        \n                        <div className=\"text-center display-1 mb-3\">\n                            <i className=\"fa fa-calendar-check text-success\"></i>\n                        </div>\n                        \n                        <button  type=\"button\" className=\"btn btn-success btn-block btn-lg\" onClick={()=>{this.handleDownloadICS()}}>Download ICS</button>\n                        <p className=\"mt-3\">Have a question or need to change something? <a href=\"#\">Contact our Delivery & Installation team.</a></p>  \n                    </div> \n                :\n                    <div className=\"container\">\n                        <div className=\"mt-2 mb-3\">\n                            <p>We come to you when you're ready. Pick a time and a technician will show up with your order and help you get everything set up.</p>\n                            <p>Here are some times that appear to be free on your calendar:</p>\n                            <p>{tsFormat(this.state.selectedDate)}</p>\n                        </div>\n                        <Radios handleDateChange={this.handleDateChange}></Radios>\n                        {this.state.isShowDatePicker ?\n                            <DatePicker utils={DateFnsUtils} classes={this.classes} selectedDate={this.state.selectedDate} handleDateChange={this.handleDateChange}></DatePicker>\n                        : null}\n                        <button type=\"button\" className=\"btn btn-primary btn-block btn-lg\" onClick={()=>{this.handleConfirm()}}>Set Delivery Time</button>\n                        <p className=\"mt-3\">None of these work? <a href=\"#\" onClick={()=>{this.handleChooseDate()}}>Find another time</a></p>  \n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state, ownProps){\n    return {\n        order: state.order,\n        notifications: state.notifications\n    };\n  }\n \n  function mapDispatchToProps(dispatch){\n   return {\n     orderActions: bindActionCreators(orderActions, dispatch),\n     notificationActions: bindActionCreators(notificationActions, dispatch),\n     pageActions: bindActionCreators(pageActions, dispatch),\n   };\n }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Schedule);\n","import React from 'react';\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport CheckOut from './CheckOut';\nimport OrderConfirm from './OrderConfirm';\nimport TrackOrder from './TrackOrder';\nimport Schedule from './Schedule';\n\nconst Routes = (props) => {\n    return (\n        <div className=\"container\">\n            <Switch>\n                <Route exact path=\"/\" render={(props) => <CheckOut pageTitle={'Check Out'} {...props}/>} >\n                    <Route exact path=\"/checkout\" render={(props) => <CheckOut {...props}/>} />\n                </Route>\n                <Route exact path=\"/order-confirmation/:id\" render={(props) => <OrderConfirm {...props}/>} />\n                <Route exact path=\"/order-status/:id\" render={(props) => <TrackOrder {...props}/>} />\n                <Route exact path=\"/schedule-pickup/:id\" render={(props) => <Schedule {...props}/>} />\n            </Switch>\n        </div>\n    )\n};\n\nexport default Routes;","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport * as pageActions from '../actions/pageActions';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nclass HeaderBar extends Component {\n\n    render() {\n      return(\n        <nav className=\"navbar navbar-light bg-light\">\n          <span className=\"navbar-brand mb-0 h1\">{this.props.page.title}\n            {this.props.page.status ? <span>:<span class=\"text-success\"> {this.props.page.status}</span></span> : null}\n          </span>\n          <a className=\"\" href=\"/\">Cart</a>\n        </nav>\n      )\n    }\n }\n \n function mapStateToProps(state, ownProps){\n  return {\n      page: state.page,\n  };\n}\n\nfunction mapDispatchToProps(dispatch){\n  return {\n      pageActions: bindActionCreators(pageActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (withRouter(HeaderBar));","import React from 'react';\nimport moment from 'moment';\nconst tsFormat = (date) => moment(date).format('M/DD/YY hh:mm A').trim();\n\nconst Notification = (props) => {\n    return (\n        <div className=\"notification\">\n            <div className=\"alert alert-info\" role=\"alert\">\n                <p>{tsFormat(props.time)}</p>\n                <p>{props.message}</p>\n                <button type=\"button\" className=\"btn btn-outline-info\" onClick={()=>{props.closeFn(props.id)}}>Close</button>\n            </div>\n        </div>\n    )\n};\n\nexport default Notification;","import React, { Component } from 'react';\nimport * as notificationActions from '../actions/notificationActions';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport Notification from './Notification';\nimport * as _ from 'lodash';\n\nclass Notifications extends Component {\n    constructor(props){\n        super();\n    }\n\n    handleCloseClick = (notificationId) =>{\n        this.props.notificationActions.deleteNotification(notificationId);\n    }\n\n    notificationsContainer = () =>{\n        let ordered = _.orderBy(this.props.notifications.model, ['timestamp'],['desc']);\n        return _.map(ordered, note =>{\n            return(\n                <Notification isAnimate={true} type={note.side} message={note.displayMessage} time={note.timestamp} id={note.notificationId} closeFn={this.handleCloseClick} isFixed={false} key={note.id}/>\n            )\n        });\n    }\n\n    render() {\n        return this.props.notifications.model ? (\n            <div className=\"notifications-container flex-container column\">\n                {this.notificationsContainer()}\n            </div>\n        ) : null;\n    }\n }\n\nfunction mapStateToProps(state, ownProps){\n    return {\n        notifications: state.notifications,\n    };\n}\n\nfunction mapDispatchToProps(dispatch){\n    return {\n        notificationActions: bindActionCreators(notificationActions, dispatch)\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Notifications);\n","import React, { Component } from 'react';\nimport Routes from './components/Routes';\nimport HeaderBar from './components/HeaderBar';\nimport Notifications from './components/Notifications';\n\nclass App extends Component {\n  constructor(props){\n    super();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n          <HeaderBar/>\n          <Routes />\n          <Notifications />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport rootReducer from '../reducers';\nimport reduxImmutableStateInvariant from 'redux-immutable-state-invariant';\nimport thunk from 'redux-thunk';\n\nexport default function configureStore(initialState){\n    return createStore(\n        rootReducer,\n        initialState,\n        applyMiddleware(thunk, reduxImmutableStateInvariant())\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport configureStore from './store/configureStore';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './css/main.css';\n\nconst store = configureStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App/>\n        </Router>\n    </Provider>\n, \ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}